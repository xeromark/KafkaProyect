services:

  notificaciones:
    image: python:3.11
    volumes:
      - ./kafka/Notificaciones:/app
    working_dir: /app
    command: bash -c "pip install -r requerimientos.txt && python consumer.py"
    depends_on:
      - kafka
    networks:
      custom_network:
        ipv4_address: 172.16.0.10
    
  
  procesamiento:
    image: python:3.11
    volumes:
      - ./kafka/Procesamiento:/app
    working_dir: /app
    stdin_open: true
    tty: true
    command: bash -c "pip install -r requerimientos.txt && python producer-consumer.py"
    depends_on:
      - kafka
    networks:
      custom_network:
        ipv4_address: 172.16.0.11
    

  solicitudes:
    image: python:3.11
    volumes:
      - ./kafka/Solicitudes:/app
    working_dir: /app
    stdin_open: true
    tty: true
    command: bash -c "pip install -r requerimientos.txt && python producer.py"
    ports:
      - '5001:5001'
    depends_on:
      - kafka
    networks:
      custom_network:
        ipv4_address: 172.16.0.12
    extra_hosts:
      - "host.docker.internal:host-gateway"

  kafka:
    image: 'bitnami/kafka:latest'
    container_name: Kafka
    ports:
      - '9092:9092'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - ALLOW_PLAINTEXT_LISTENER=yes
    restart: always
    networks:
      custom_network:
        ipv4_address: 172.16.0.20

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    container_name: Zookeeper
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    restart: always
    networks:
      custom_network:
        ipv4_address: 172.16.0.50

networks:
  custom_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.0.0/24
